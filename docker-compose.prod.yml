
version: "3"

services:
  db:
    image: mysql
    container_name: mysql
    cap_add:
      - SYS_NICE 
    networks:
      - gallery_net
    restart: always
    environment:
      - MYSQL_ROOT_PASSWORD=wiPdqA#iCvwF
      - MYSQL_DATABASE=gallery

  client:
    build:
      context: ./frontend
      dockerfile: dockerfile.prod
    container_name: client
    ports:
      - "3000:3000"
    restart: always
    command: serve -s build -p 3000
    networks:
      - gallery_net

  server:
    build:
      context: ./backend
      dockerfile: dockerfile.prod
    container_name: server
    ports:
      - "8000:8000"
    restart: always
    command: npm start
    env_file:
      - ./backend/.prod.env
    networks:
      - gallery_net
    restart: always
    depends_on:
      - db

  nginx:
    build: ./nginx
    ports:
      - "80:80"
    depends_on:
      - server
      - client
    restart: always
    environment: 
      - VIRTUAL_HOST=my-gallery.xyz,www.my-gallery.xyz
      - LETSENCRYPT_HOST=my-gallery.xyz,www.my-gallery.xyz
    depends_on:
      - client
      - server
      - db
    networks:
      - gallery_net

  
  nginx-proxy:
    image: jwilder/nginx-proxy
    restart: always
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - /var/run/docker.sock:/tmp/docker.sock:ro
      - certs:/etc/nginx/certs:ro
      - vhostd:/etc/nginx/vhost.d
      - html:/usr/share/nginx/html
      - ./proxy/max-size.conf:/etc/nginx/conf.d/max-size.conf:ro
    networks:
      - gallery_net
    labels:
        - com.github.jrcs.letsencrypt_nginx_proxy_companion.nginx_proxy

  letsencrypt:
    image: jrcs/letsencrypt-nginx-proxy-companion
    restart: always
    environment:
      - NGINX_PROXY_CONTAINER=nginx-proxy
    volumes:
      - certs:/etc/nginx/certs:rw
      - /var/run/docker.sock:/var/run/docker.sock:ro
      - vhostd:/etc/nginx/vhost.d
      - html:/usr/share/nginx/html
    networks:
      - gallery_net

networks:
  gallery_net:
    driver: bridge


volumes:
  certs:
  html:
  vhostd:    
